// Copyright 2021-2025 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.0.6 with parameter "target=ts,import_extension=js"
// @generated from file extra/buf_validate_types.proto (package spec, edition 2023)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import { file_extra_minimal_validate } from "./minimal-validate_pb.js";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file extra/buf_validate_types.proto.
 */
export const file_extra_buf_validate_types: GenFile = /*@__PURE__*/
  fileDesc("Ch5leHRyYS9idWZfdmFsaWRhdGVfdHlwZXMucHJvdG8SBHNwZWMifgoRQnVmVmFsaWRhdGVTaW1wbGUSDAoEbmFtZRgBIAEoCRITCgtkZXNjcmlwdGlvbhgCIAEoCRILCgNhZ2UYAyABKAU6ObpINho0Cg1yZWFkb25seV9uYW1lEhJuYW1lIG11c3QgYmUgZW1wdHkaD3RoaXMubmFtZSA9PSAnJyK3AQoTQnVmVmFsaWRhdGVNdWx0aXBsZRIKCgJpZBgBIAEoCRIMCgRjb2RlGAIgASgFEg0KBXRpdGxlGAMgASgJEg4KBmFjdGl2ZRgEIAEoCDpnukhkGi4KC3JlYWRvbmx5X2lkEhBpZCBtdXN0IGJlIGVtcHR5Gg10aGlzLmlkID09ICcnGjIKDXJlYWRvbmx5X2NvZGUSEWNvZGUgbXVzdCBiZSB6ZXJvGg50aGlzLmNvZGUgPT0gMCKbAQoRQnVmVmFsaWRhdGVOb3RIYXMSFgoOb3B0aW9uYWxfZmllbGQYASABKAkSEwoLb3RoZXJfZmllbGQYAiABKAk6WbpIVhpUChdyZWFkb25seV9vcHRpb25hbF9maWVsZBIeb3B0aW9uYWxfZmllbGQgbXVzdCBub3QgYmUgc2V0GhkhaGFzKHRoaXMub3B0aW9uYWxfZmllbGQpIksKC05lc3RlZENoaWxkEhIKCmNoaWxkX25hbWUYASABKAkSEwoLY2hpbGRfdmFsdWUYAiABKAkSEwoLY2hpbGRfY291bnQYAyABKAUijgIKEUJ1ZlZhbGlkYXRlTmVzdGVkEiEKBm5lc3RlZBgBIAEoCzIRLnNwZWMuTmVzdGVkQ2hpbGQSFAoMcGFyZW50X2ZpZWxkGAIgASgJOr8Buki7ARpbChpyZWFkb25seV9uZXN0ZWRfY2hpbGRfbmFtZRIfbmVzdGVkLmNoaWxkX25hbWUgbXVzdCBiZSBlbXB0eRocdGhpcy5uZXN0ZWQuY2hpbGRfbmFtZSA9PSAnJxpcChtyZWFkb25seV9uZXN0ZWRfY2hpbGRfY291bnQSH25lc3RlZC5jaGlsZF9jb3VudCBtdXN0IGJlIHplcm8aHHRoaXMubmVzdGVkLmNoaWxkX2NvdW50ID09IDAiqAEKE0J1ZlZhbGlkYXRlQ29tYmluZWQSDgoGZmllbGQxGAEgASgJEg4KBmZpZWxkMhgCIAEoCRIOCgZmaWVsZDMYAyABKAk6YbpIXhpcChFyZWFkb25seV9jb21iaW5lZBIfZmllbGQxIGFuZCBmaWVsZDIgbXVzdCBiZSBlbXB0eRomdGhpcy5maWVsZDEgPT0gJycgJiYgdGhpcy5maWVsZDIgPT0gJycilgEKFEJ1ZlZhbGlkYXRlU25ha2VDYXNlEhEKCXVzZXJfbmFtZRgBIAEoCRISCgpmaXJzdF9uYW1lGAIgASgJEhEKCWxhc3RfbmFtZRgDIAEoCTpEukhBGj8KDnJlYWRvbmx5X3NuYWtlEhd1c2VyX25hbWUgbXVzdCBiZSBlbXB0eRoUdGhpcy51c2VyX25hbWUgPT0gJyciNQoQQnVmVmFsaWRhdGVOb0NlbBIMCgRuYW1lGAEgASgJEhMKC2Rlc2NyaXB0aW9uGAIgASgJIq4CChlCdWZWYWxpZGF0ZU11bHRpcGxlTmVzdGVkEiEKBmNoaWxkMRgBIAEoCzIRLnNwZWMuTmVzdGVkQ2hpbGQSIQoGY2hpbGQyGAIgASgLMhEuc3BlYy5OZXN0ZWRDaGlsZBITCgtwYXJlbnRfbmFtZRgDIAEoCTq1AbpIsQEaVQoUcmVhZG9ubHlfY2hpbGQxX25hbWUSH2NoaWxkMS5jaGlsZF9uYW1lIG11c3QgYmUgZW1wdHkaHHRoaXMuY2hpbGQxLmNoaWxkX25hbWUgPT0gJycaWAoVcmVhZG9ubHlfY2hpbGQyX3ZhbHVlEiBjaGlsZDIuY2hpbGRfdmFsdWUgbXVzdCBiZSBlbXB0eRoddGhpcy5jaGlsZDIuY2hpbGRfdmFsdWUgPT0gJyciwAEKF0J1ZlZhbGlkYXRlV2l0aFJlcXVpcmVkEhYKDnJlYWRvbmx5X2ZpZWxkGAEgASgJEh4KDnJlcXVpcmVkX2ZpZWxkGAIgASgJQga6SAPIAQESFAoMbm9ybWFsX2ZpZWxkGAMgASgJOle6SFQaUgoXcmVhZG9ubHlfcmVhZG9ubHlfZmllbGQSHHJlYWRvbmx5X2ZpZWxkIG11c3QgYmUgZW1wdHkaGXRoaXMucmVhZG9ubHlfZmllbGQgPT0gJycimwEKDUJ1ZlZhbGlkYXRlT3ISDgoGZmllbGQxGAEgASgJEg4KBmZpZWxkMhgCIAEoCRIOCgZmaWVsZDMYAyABKAk6WrpIVxpVCgtyZWFkb25seV9vchIeZmllbGQxIG9yIGZpZWxkMiBtdXN0IGJlIGVtcHR5GiZ0aGlzLmZpZWxkMSA9PSAnJyB8fCB0aGlzLmZpZWxkMiA9PSAnJyK4AQoXQnVmVmFsaWRhdGVXaXRoUmVwZWF0ZWQSFAoMc2luZ2xlX2ZpZWxkGAEgASgJEhIKCmxpc3RfZmllbGQYAiADKAkSJgoLbmVzdGVkX2xpc3QYAyADKAsyES5zcGVjLk5lc3RlZENoaWxkOku6SEgaRgoPcmVhZG9ubHlfc2luZ2xlEhpzaW5nbGVfZmllbGQgbXVzdCBiZSBlbXB0eRoXdGhpcy5zaW5nbGVfZmllbGQgPT0gJyciewoUQnVmVmFsaWRhdGVSZWZlcmVuY2USJwoGc2ltcGxlGAEgASgLMhcuc3BlYy5CdWZWYWxpZGF0ZVNpbXBsZRInCgZuZXN0ZWQYAiABKAsyFy5zcGVjLkJ1ZlZhbGlkYXRlTmVzdGVkEhEKCW93bl9maWVsZBgDIAEoCWIIZWRpdGlvbnNw6Ac", [file_extra_minimal_validate]);

/**
 * Test message for buf_validate with simple read-only field constraints
 *
 * @generated from message spec.BufValidateSimple
 */
export type BufValidateSimple = Message<"spec.BufValidateSimple"> & {
  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * @generated from field: int32 age = 3;
   */
  age: number;
};

/**
 * Describes the message spec.BufValidateSimple.
 * Use `create(BufValidateSimpleSchema)` to create a new message.
 */
export const BufValidateSimpleSchema: GenMessage<BufValidateSimple> = /*@__PURE__*/
  messageDesc(file_extra_buf_validate_types, 0);

/**
 * Test message for buf_validate with multiple read-only fields
 *
 * @generated from message spec.BufValidateMultiple
 */
export type BufValidateMultiple = Message<"spec.BufValidateMultiple"> & {
  /**
   * @generated from field: string title = 3;
   */
  title: string;

  /**
   * @generated from field: bool active = 4;
   */
  active: boolean;
};

/**
 * Describes the message spec.BufValidateMultiple.
 * Use `create(BufValidateMultipleSchema)` to create a new message.
 */
export const BufValidateMultipleSchema: GenMessage<BufValidateMultiple> = /*@__PURE__*/
  messageDesc(file_extra_buf_validate_types, 1);

/**
 * Test message for buf_validate with !has() pattern
 *
 * @generated from message spec.BufValidateNotHas
 */
export type BufValidateNotHas = Message<"spec.BufValidateNotHas"> & {
  /**
   * @generated from field: string other_field = 2;
   */
  otherField: string;
};

/**
 * Describes the message spec.BufValidateNotHas.
 * Use `create(BufValidateNotHasSchema)` to create a new message.
 */
export const BufValidateNotHasSchema: GenMessage<BufValidateNotHas> = /*@__PURE__*/
  messageDesc(file_extra_buf_validate_types, 2);

/**
 * Nested message for testing nested constraints
 *
 * @generated from message spec.NestedChild
 */
export type NestedChild = Message<"spec.NestedChild"> & {
  /**
   * @generated from field: string child_name = 1;
   */
  childName: string;

  /**
   * @generated from field: string child_value = 2;
   */
  childValue: string;

  /**
   * @generated from field: int32 child_count = 3;
   */
  childCount: number;
};

/**
 * Describes the message spec.NestedChild.
 * Use `create(NestedChildSchema)` to create a new message.
 */
export const NestedChildSchema: GenMessage<NestedChild> = /*@__PURE__*/
  messageDesc(file_extra_buf_validate_types, 3);

/**
 * Test message for buf_validate with nested field constraints
 *
 * @generated from message spec.BufValidateNested
 */
export type BufValidateNested = Message<"spec.BufValidateNested"> & {
  /**
   * @generated from field: spec.NestedChild nested = 1;
   */
  nested?: Omit<NestedChild, 'childName' | 'childCount'>;

  /**
   * @generated from field: string parent_field = 2;
   */
  parentField: string;
};

/**
 * Describes the message spec.BufValidateNested.
 * Use `create(BufValidateNestedSchema)` to create a new message.
 */
export const BufValidateNestedSchema: GenMessage<BufValidateNested> = /*@__PURE__*/
  messageDesc(file_extra_buf_validate_types, 4);

/**
 * Test message combining multiple CEL patterns with logical operators
 *
 * @generated from message spec.BufValidateCombined
 */
export type BufValidateCombined = Message<"spec.BufValidateCombined"> & {
  /**
   * @generated from field: string field3 = 3;
   */
  field3: string;
};

/**
 * Describes the message spec.BufValidateCombined.
 * Use `create(BufValidateCombinedSchema)` to create a new message.
 */
export const BufValidateCombinedSchema: GenMessage<BufValidateCombined> = /*@__PURE__*/
  messageDesc(file_extra_buf_validate_types, 5);

/**
 * Test message with snake_case fields that should be converted to camelCase
 *
 * @generated from message spec.BufValidateSnakeCase
 */
export type BufValidateSnakeCase = Message<"spec.BufValidateSnakeCase"> & {
  /**
   * @generated from field: string first_name = 2;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 3;
   */
  lastName: string;
};

/**
 * Describes the message spec.BufValidateSnakeCase.
 * Use `create(BufValidateSnakeCaseSchema)` to create a new message.
 */
export const BufValidateSnakeCaseSchema: GenMessage<BufValidateSnakeCase> = /*@__PURE__*/
  messageDesc(file_extra_buf_validate_types, 6);

/**
 * Test message without CEL constraints (should not apply Omit)
 *
 * @generated from message spec.BufValidateNoCel
 */
export type BufValidateNoCel = Message<"spec.BufValidateNoCel"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;
};

/**
 * Describes the message spec.BufValidateNoCel.
 * Use `create(BufValidateNoCelSchema)` to create a new message.
 */
export const BufValidateNoCelSchema: GenMessage<BufValidateNoCel> = /*@__PURE__*/
  messageDesc(file_extra_buf_validate_types, 7);

/**
 * Test message with multiple nested constraints on different fields
 *
 * @generated from message spec.BufValidateMultipleNested
 */
export type BufValidateMultipleNested = Message<"spec.BufValidateMultipleNested"> & {
  /**
   * @generated from field: spec.NestedChild child1 = 1;
   */
  child1?: Omit<NestedChild, 'childName'>;

  /**
   * @generated from field: spec.NestedChild child2 = 2;
   */
  child2?: Omit<NestedChild, 'childValue'>;

  /**
   * @generated from field: string parent_name = 3;
   */
  parentName: string;
};

/**
 * Describes the message spec.BufValidateMultipleNested.
 * Use `create(BufValidateMultipleNestedSchema)` to create a new message.
 */
export const BufValidateMultipleNestedSchema: GenMessage<BufValidateMultipleNested> = /*@__PURE__*/
  messageDesc(file_extra_buf_validate_types, 8);

/**
 * Test message with required field and buf_validate
 *
 * @generated from message spec.BufValidateWithRequired
 */
export type BufValidateWithRequired = Message<"spec.BufValidateWithRequired"> & {
  /**
   * @generated from field: string required_field = 2;
   */
  requiredField: string;

  /**
   * @generated from field: string normal_field = 3;
   */
  normalField: string;
};

/**
 * Describes the message spec.BufValidateWithRequired.
 * Use `create(BufValidateWithRequiredSchema)` to create a new message.
 */
export const BufValidateWithRequiredSchema: GenMessage<BufValidateWithRequired> = /*@__PURE__*/
  messageDesc(file_extra_buf_validate_types, 9);

/**
 * Test message for OR logical operator
 *
 * @generated from message spec.BufValidateOr
 */
export type BufValidateOr = Message<"spec.BufValidateOr"> & {
  /**
   * @generated from field: string field1 = 1;
   */
  field1: string;

  /**
   * @generated from field: string field2 = 2;
   */
  field2: string;

  /**
   * @generated from field: string field3 = 3;
   */
  field3: string;
};

/**
 * Describes the message spec.BufValidateOr.
 * Use `create(BufValidateOrSchema)` to create a new message.
 */
export const BufValidateOrSchema: GenMessage<BufValidateOr> = /*@__PURE__*/
  messageDesc(file_extra_buf_validate_types, 10);

/**
 * Test message with repeated fields
 *
 * @generated from message spec.BufValidateWithRepeated
 */
export type BufValidateWithRepeated = Message<"spec.BufValidateWithRepeated"> & {
  /**
   * @generated from field: repeated string list_field = 2;
   */
  listField: string[];

  /**
   * @generated from field: repeated spec.NestedChild nested_list = 3;
   */
  nestedList: NestedChild[];
};

/**
 * Describes the message spec.BufValidateWithRepeated.
 * Use `create(BufValidateWithRepeatedSchema)` to create a new message.
 */
export const BufValidateWithRepeatedSchema: GenMessage<BufValidateWithRepeated> = /*@__PURE__*/
  messageDesc(file_extra_buf_validate_types, 11);

/**
 * Test message referencing another message with buf_validate
 *
 * @generated from message spec.BufValidateReference
 */
export type BufValidateReference = Message<"spec.BufValidateReference"> & {
  /**
   * @generated from field: spec.BufValidateSimple simple = 1;
   */
  simple?: BufValidateSimple;

  /**
   * @generated from field: spec.BufValidateNested nested = 2;
   */
  nested?: BufValidateNested;

  /**
   * @generated from field: string own_field = 3;
   */
  ownField: string;
};

/**
 * Describes the message spec.BufValidateReference.
 * Use `create(BufValidateReferenceSchema)` to create a new message.
 */
export const BufValidateReferenceSchema: GenMessage<BufValidateReference> = /*@__PURE__*/
  messageDesc(file_extra_buf_validate_types, 12);

